*--------------------------------------------------------------------*
*                                                                    *
*     This utility is to aid in finding "things".                    *
*                                                                    *
*     Usage is: FIND|UPDATE  type   name                             *
*       Valid "type"s are defined in CSECT FIND03.                   *
*       "types" should be limited to PDSs with members that can      *
*       be viewed or updated via SPF (SPF options 1 and 2).          *
*                                                                    *
*       name is the member name                                      *
*                                                                    *
*                                                                    *
*     The idea here is to allow a user to enter a command like:      *
*        "FIND PROC XYZJCL" or "FIND MACRO OPEN".                    *
*                                                                    *
*     CSECT FIND03 defines the valid "types".                        *
*     For each "type", you may define DDnames and/or data set names. *
*     The program will search the data sets allocated to any DDnames *
*     then the specific data sets.                                   *
*                                                                    *
*--------------------------------------------------------------------*
FIND     CSECT
         ENTRY FIND
         ENTRY UPDATE
         USING DSNCDSCT,R6         DEFINE BASE
         USING S99RB,R5            DEFINE BASE
         USING FIND,R15
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LA    R10,(FIND-FIND)     OFFSET OF ENTRY POINT
         B     INIT0010            SKIP EYECATHER, DATE, AND TIME
UPDATE   DS    0H
         USING UPDATE,R15
         STM   R14,R12,12(R13)
         LA    R10,(UPDATE-FIND)   OFFSET OF ENTRY POINT
         B     INIT0010
INIT0000 DS    0H
         DC    CL8'FIND  '         MODULE'S NAME
         DC    C'&SYSDATE'         DATE OF ASSEMBLY
         DC    C'&SYSTIME'         TIME OF ASSEMBLY
INIT0010 DS    0H
         LR    R12,R15             COPY BASE
         SR    R12,R10             MINUS ENTRY POINT OFFSET
         DROP  R15
         USING FIND,R12            DEFINE BASE
         LR    R11,R1              COPY CPPL ADDRESS
         USING CPPL,R11            DEFINE CPPL BASE
*--------------------------------------------------------------------*
*       ACQUIRE STORAGE FOR WORK AREA                                *
*--------------------------------------------------------------------*
         GETMAIN R,LV=SPFWORKL
         LR    R2,R1               CLEAR WORK AREA - SET ADDRESS 1
         LA    R3,SPFWORKL                         - SET LENGTH 1
         SR    R4,R4                               - SET ADDRESS 2
         SR    R5,R5                               - SET LENGTH 2
         MVCL  R2,R4               INITIALIZE WORK AREA
         USING SPFWORK,R1          DEFINE BASE
         ST    R13,SPFSAVE+4       SAVE CALLER'S REGISTER 13
         ST    R1,8(R13)           CHAIN OUR WORK AREA TO CALLER'S
         LR    R13,R1              SET WORK AREA BASE
         DROP  R1
         USING SPFWORK,R13         RE-DEFINE WORK AREA BASE
         LTR   R10,R10             COMMAND 'FIND'?
         BZ    INIT0020            YES
         MVC   SPFCMD,=CL8'EDIT'   SET SPF COMMAND TO 'EDIT'
         B     INIT0030
INIT0020 DS    0H
         MVC   SPFCMD,=CL8'BROWSE' SET COMMAND TO BROWSE
*--------------------------------------------------------------------*
*        PARSE OUT THE TYPE AND MEMBER NAME                          *
*--------------------------------------------------------------------*
INIT0030 DS    0H
         XC    WORKEP,WORKEP       CLEAR THE TYPE TABLE EP ADDR
         XC    WORKDSNC,WORKDSNC   CLEAR THE DATASET NAME CHAIN
         MVC   WORKDCB(PDSDCBL),PDSDCBI
         MVC   WORKOPEN(OPENL),OPENI
         MVC   WORKTYPE,BLANKS     INITIALIZE MEMBER TYPE
         MVC   WORKMEM,BLANKS      INITIALIZE MEMBER NAME
         L     R9,CPPLCBUF         COMMAND BUFFER ADDRESS
         LH    R1,0(R9)            LENGTH
         BCTR  R1,0
         EX    R1,UPPRTR           TRANSLATE TO UPPERCASE
         LH    R7,0(R9)            DATA LENGTH
         CLI   2(R9),X'00'         TWO LENGTHS PRESENT?
         BE    INIT0040            YES
         LA    R8,2(R9)            DATA ADDRESS IN BUFFER
         B     PROC0000
INIT0040 DS    0H
         LA    R8,4(R9)            DATA ADDRESS
         SH    R7,H4               MINUS 4
PROC0000 DS    0H
         CLI   0(R8),C' '          BLANK?
         BNE   PROC0010            NO
         LA    R8,1(R8)            NEXT
         BCT   R7,PROC0000         LOOP
         LM    R0,R1,MSG01PRM      SET REGS FOR TPUT
         BAL   R10,TPUT0000        ISSUE TPUT
         B     EXIT0000            AND EXIT
PROC0010 DS    0H
         MVC   WORKTYPE,BLANKS     SET TO BLANKS
         LA    R1,WORKTYPE         OUTPUT AREA ADDRESS
         SR    R2,R2               USE R2 TO CALCULATE LENGTH OF TYPE
PROC0020 DS    0H
         CLI   0(R8),C' '          BLANK?
         BE    PROC0040            YES
         CH    R2,H8               TYPE TOO LONG?
         BE    ERR0040             YES
         MVC   0(1,R1),0(R8)       COPY TO OUTPUT
         LA    R1,1(R1)            NEXT IN OUTPUT
         LA    R8,1(R8)            NEXT IN BUFFER
         LA    R2,1(R2)            PLUS 1
         BCT   R7,PROC0020         LOOP
         LM    R0,R1,MSG03PRM      SET REGS FOR MESSAGE
         BAL   R10,TPUT0000        ISSUE MESSAGE
         B     EXIT0000
PROC0040 DS    0H
         CLC   =C'FIND',WORKTYPE   COMMAND?
         BE    PROC0000            SKIP
         CLC   =C'UPDATE',WORKTYPE COMMAND?
         BE    PROC0000            SKIP
PROC0050 DS    0H
         CLI   0(R8),C' '          BLANK?
         BNE   PROC0060            NO
         LA    R8,1(R8)            NEXT
         BCT   R7,PROC0050         LOOP
         LM    R0,R1,MSG03PRM      SET REGS FOR MESSAGE
         BAL   R10,TPUT0000        ISSUE MESSAGE
         B     EXIT0000            NO MEMBER NAME
PROC0060 DS    0H
         LA    R1,WORKMEM          OUTPUT AREA ADDRESS
         SR    R2,R2               USE TO COUNT NAME LENGTH
PROC0070 DS    0H
         CLI   0(R8),C' '          BLANK?
         BE    PROC0080            YES
         CH    R2,H8               TOO LONG?
         BE    ERR0050             YES
         MVC   0(R1,R1),0(R8)      COPY TO OUTPUT
         LA    R1,1(R1)            NEXT IN OUTPUT
         LA    R8,1(R8)            NEXT IN BUFFER
         LA    R2,1(R2)            ADD 1 TO LENGTH
         BCT   R7,PROC0070
*--------------------------------------------------------------------*
*        FIND THE TYPE IN THE TYPETBLE (FIND03)                      *
*--------------------------------------------------------------------*
PROC0080 DS    0H
         LOAD  EP=FIND03           LOAD THE TYPE DEFINITIONS
         LR    R9,R0               SAVE THE ENTRY POINT
         ST    R9,WORKEP           SAVE TABLE ENTRY POINT
         USING TYPETBLE,R9         DEFINE BASE
         SR    R1,R1               CLEAR REGISTER
PROC0090 DS    0H
         CLI   TYPELEN,X'FF'       END OF TABLE?
         BE    ERR0010             YES.. BAD TYPE
         CLC   WORKTYPE,TYPETYPE   FOUND THE TYPE?
         BE    PROC0100            YES
         ICM   R1,3,TYPELEN        LENGTH OF THIS ENTRY
         AR    R9,R1               NEXT ENTRY
         B     PROC0090            LOOP
PROC0100 DS    0H
         LA    R7,TYPEDDS          FIRST DD NAME
         SR    R8,R8               CLEAR REGISTER
         ICM   R8,3,TYPE#DDS       NUMBER OF DD NAMES
         BZ    PROC0140            NONE
PROC0110 DS    0H
         MVC   FINDDDNM,0(R7)      COPY DDNAME
         LA    R1,FIND#            MAX DSN'S TO RETURN
         STCM  R1,3,FINDNBR        SET MAXIMUM NBR TO RETURN
         LA    R1,FINDREQ          REQUEST BLOCK ADDRESS
         L     R15,VFIND02         FIND02 ENTRY POINT
         BALR  R14,R15             FIND DSN'S ALLOCATED TO THE DD
         CLI   FINDSTAT,$FINDOK    LOCATED?
         BNE   PROC0130            NO
         SR    R2,R2               CLEAR REGISTER
         ICM   R2,3,FINDNBR        NUMBER OF DSN'S RETURNED
         BZ    CHAIN120            NONE
         LA    R3,FINDDSNM         FIRST DSN RETURNED
PROC0120 DS    0H
         BAL   R10,CHAIN000        ADD DSN TO CHAIN
         LA    R3,L'FINDDSNM(,R3)  NEXT DATASET
         BCT   R2,PROC0120         ADD ALL FOUND TO CHAIN
PROC0130 DS    0H
         LA    R7,L'TYPEDDS(,R7)   NEXT DD NAME
         BCT   R8,PROC0110         PROCESS ALL DDNAMES
*---------------------------------------------------------------------*
*                                                                     *
*    All DD's in the "TYPE" definition have been processed.           *
*    Now add any "standard" dataset names.                            *
*                                                                     *
*    R7 will already be pointing to the first dataset name.           *
*                                                                     *
*---------------------------------------------------------------------*
PROC0140 DS    0H
         ICM   R8,3,TYPEDSNS       NUMBER OF DATASETS FROM 'TYPE' TBLE
         BZ    PROC0160            NONE.. GO LIST THE CHAIN
PROC0150 DS    0H
         LR    R3,R7               COPY ADDRESS
         BAL   R10,CHAIN000        ADD IT TO THE CHAIN
         LA    R7,44(,R7)          NEXT DATASET NAME
         BCT   R8,PROC0150         PROCESS THEM ALL
PROC0160 DS    0H
         ICM   R6,15,WORKDSNC      FIRST DATASET BLOCK
         BZ    ERR0020             NOTHING ON THE CHAIN
PROC0170 DS    0H
         MVC   DAIRDSN,DSNCDSN     COPY DATASET NAME
         MVC   DAIRMEM,WORKMEM     COPY MEMBER NAME
         BAL   R10,DAIR0000        ALLOCATE THE DATASET
         OC    S99ERROR,S99ERROR   SUCCESSFUL?
         BNZ   PROC0220            NO
         OPEN  (WORKDCB,INPUT),MF=(E,WORKOPEN)
         FIND  WORKDCB,WORKMEM,D
         LR    R2,R15              SAVE THE RETURN CODE
         CLOSE WORKDCB,MF=(E,WORKCLS)
         BAL   R10,DAIR1000        DE-ALLOCATE THE PDS
         OC    S99ERROR,S99ERROR   DE-ALLOCATE SUCCESSFUL?
         BNZ   ERR0030             NO
         LTR   R2,R2               MEMBER LOCATED?
         BNZ   PROC0220            NO, CHECK NEXT DATASET
         MVI   WORKDSM,C' '
         MVC   WORKDSM+1(L'WORKDSM-1),WORKDSM
         MVI   WORKDSM,C''''       INSERT QUOTE
         MVC   WORKDSM+1(L'DAIRDSN),DAIRDSN
         LA    R1,WORKDSM          FIRST BYTE OF DSN
         LA    R2,L'WORKDSM        MAXIMUM LENGTH
PROC0180 DS    0H
         CLI   0(R1),C' '          BLANK?
         BE    PROC0190            YES
         LA    R1,1(R1)            NEXT
         BCT   R2,PROC0180         LOOP
         ABEND 2,DUMP,,USER
PROC0190 DS    0H
         MVI   0(R1),C'('          INSERT OPEN PARENTHESIS
         MVC   1(8,R1),WORKMEM     INSERT MEMBER NAME
PROC0200 DS    0H
         CLI   0(R1),C' '          BLANK?
         BE    PROC0210            YES
         LA    R1,1(R1)            NEXT
         BCT   R2,PROC0200
         ABEND 3,DUMP,,USER
PROC0210 DS    0H
         MVI   0(R1),C')'          CLOSING PARENTHESIS
         mvi   1(r1),c''''         set closing quote
         LA    R1,SPFCMD           ADDRESS OF SPF SERVICE NAME
         ST    R1,SPFPRM1          SET ADDRESS
         LA    R1,WORKDSM          DATASET NAME
         ST    R1,SPFPRM2          SET SET ADDRESS
         OI    SPFPRM2,X'80'       FLAG END-OF-LIST
         LOAD  EP=ISPLINK          LOAD SPF INTERFACE
         LR    R15,R0              COPY ENTRY POINT
         LA    R1,SPFPRM1          ADDRESS OF PARM LIST
         BALR  R14,R15             LINK TO SPF
         DELETE EP=ISPLINK
         B     EXIT0000
PROC0220 DS    0H
         ICM   R6,15,DSNCNEXT      NEXT ON CHAIN
         BNZ   PROC0170            DISPLAY ALL OF 'EM
         LM    R0,R1,MSG08PRM
         BAL   R10,TPUT0000
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*        R3  is the address of the new DSN to add                     *
*        R5  is used as a work register                               *
*        R6  is the base for the DSNCDSCT DSECT                       *
*        R10 is the return address                                    *
*                                                                     *
*---------------------------------------------------------------------*
CHAIN000 DS    0H
         LA    R5,WORKDSNC
CHAIN110 DS    0H
         ICM   R6,15,0(R5)
         BZ    CHAIN130            NOTHING ON CHAIN
CHAIN120 DS    0H
         CLC   DSNCDSN,0(R3)       DATASET NAME ALREADY PRESENT?
         BE    CHAIN140            YES
         LA    R5,DSNCNEXT
         B     CHAIN110            CHECK ENTIRE CHAIN
CHAIN130 DS    0H
         GETMAIN R,LV=DSNCL
         ST    R1,0(R5)            CHAIN TO PREVIOUS BLOCK
         LR    R6,R1               COPY LAST BLOCK'S ADDRESS
         XC    DSNCNEXT,DSNCNEXT   ZERO POINTER
         MVC   DSNCDSN,0(R3)       COPY DATASET NAME
CHAIN140 DS    0H
         BR    R10
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DAIR0000 DS    0H
         LA    R5,DAIRRB
         ST    R5,DAIRRBA          SET ADDRESS
         OI    DAIRRBA,X'80'       SET HIGH BIT (REQUIRED BY SVC 99)
         MVI   S99RBLN,S99RBEND-S99RB
         MVI   S99VERB,S99VRBAL    SET VERB (ALLOCATE)
         MVC   DAIRDDNP(6),DDNTXTP SET DDNAME TEXT NAMES/LENGTH
         MVC   DAIRDSNP(6),DSNTXTP SET DSN TEXT NAMES/LENGTH
         MVC   DAIRMEMP(6),MEMTXTP    SET MEMBER NAME TEXT NAMES/LEN
         MVC   DAIRIDSP(6),IDSPTXTP   SET INITIAL DISP TEXT NAMES/LEN
         MVC   DAIRNDSP(6),NDSPTXTP   SET NORMAL DISP TEXT NAMES/LEN
         MVC   DAIRDDN,=CL8'FIND'  SET DDNAME
         MVI   DAIRIDP,X'08'       INITIAL DISP (SHR)
         MVI   DAIRNDP,X'08'       NORMAL DISP STATUS (SHR)
         LA    R1,DAIRDDNP         ADDRESS OF DDNAME TEXT UNIT INFO
         ST    R1,DAIRTXT1         SET TEXT UNIT 1 ADDRESS
         LA    R1,DAIRDSNP         ADDRESS OF DDNAME TEXT UNIT INFO
         ST    R1,DAIRTXT2         SET TEXT UNIT 2 ADDRESS
         LA    R1,DAIRIDSP         ADDRESS OF INITIAL DISP TEXT UNIT
         ST    R1,DAIRTXT3         SET TEXT UNIT 4 ADDRESS
         LA    R1,DAIRNDSP         ADDRESS OF NORMAL DISP TEXT UNIT
         ST    R1,DAIRTXT4         SET TEXT UNIT 5 ADDRESS
         OI    DAIRTXT4,X'80'      FLAG END OF LIST
         LA    R1,DAIRTXT1         TEXT UNIT 1 ADDRESS
         ST    R1,S99TXTPP         SET TEXT UNIT LIST ADDRESS
         OI    S99TXTPP,X'80'
         LA    R1,DAIRRBA          SET POINTER-TO-POINTER
         DYNALLOC                  ISSUE SVC
         BR    R10
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DAIR1000 DS    0H
         LA    R5,DAIRRB
         ST    R5,DAIRRBA          SET ADDRESS
         OI    DAIRRBA,X'80'       SET HIGH BIT (REQUIRED BY SVC 99)
         MVI   S99RBLN,S99RBEND-S99RB
         MVI   S99VERB,S99VRBUN    SET VERB (DE-ALLOCATE)
         MVC   DAIRDDNP(6),DDNTXTP SET DDNAME TEXT NAMES/LENGTH
         MVC   DAIRDDN,=CL8'FIND'  SET DDNAME
         LA    R1,DAIRDDNP         ADDRESS OF DDNAME TEXT UNIT INFO
         ST    R1,DAIRTXT1         SET TEXT UNIT 1 ADDRESS
         OI    DAIRTXT1,X'80'      FLAG END OF LIST
         LA    R1,DAIRTXT1         ADDRESS OF DDNAME TEXT UNIT INFO
         ST    R1,S99TXTPP         SET TEXT UNIT LIST ADDRESS
         OI    S99TXTPP,X'80'
         LA    R1,DAIRRBA          SET POINTER-TO-POINTER
         DYNALLOC                  ISSUE SVC
         BR    R10
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
TPUT0000 DS    0H
         TPUT  (1),(0)             ISSUE TPUT
         BR    R10                 RETURN
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
ERR0010  DS    0H
         LM    R0,R1,MSG06PRM      INVALID TYPE
         BAL   R10,TPUT0000        ISSUE MESSAGE
         TPUT  WORKTYPE,8
         B     EXIT0000
ERR0020  DS    0H
         LM    R0,R1,MSG07PRM      NO DATASETS FOUND
         BAL   R10,TPUT0000        ISSUE MESSAGE
         B     EXIT0000
ERR0030  DS    0H
         ABEND 1,DUMP,,USER
ERR0040  DS    0H
         LM    R0,R1,MSG02PRM      SET REGS FOR MESSAGE
         BAL   R10,TPUT0000        ISSUE TPUT
         B     EXIT0000
ERR0050  DS    0H
         LM    R0,R1,MSG05PRM      MEMBER NAME TOO LONG
         BAL   R10,TPUT0000        ISSUE MESSAGE
         B     EXIT0000            EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0000 DS    0H
         LR    R1,R13
         L     R13,SPFSAVE+4
         LA    R0,SPFWORKL
         FREEMAIN R,A=(R1),LV=(R0)
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS
         SR    R15,R15             SET RETURN CODE
         BR    R14                 GET THE 'ELL OUTTA HERE
*---------------------------------------------------------------------*
UPPRTR   TR    0(0,R9),UPPRTAB
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
*             CONSTANTS/LITERALS                                      *
*---------------------------------------------------------------------*
VFIND02  DC    V(FIND02)
PDSDCBI  DCB   DSORG=PO,                                               +
               DDNAME=FIND,                                            +
               MACRF=R
PDSDCBL  EQU   *-PDSDCBI
OPENI    OPEN  (PDSDCBI,INPUT),MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE PDSDCBI,MF=L
CLOSEL   EQU   *-CLOSEI
MSG01PRM DC    A(MSG01L),A(MSG01)
MSG02PRM DC    A(MSG02L),A(MSG02)
MSG03PRM DC    A(MSG03L),A(MSG03)
MSG05PRM DC    A(MSG05L),A(MSG05)
MSG06PRM DC    A(MSG06L),A(MSG06)
MSG07PRM DC    A(MSG07L),A(MSG07)
MSG08PRM DC    A(MSG08L),A(MSG08)
H4       DC    H'4'
H8       DC    H'8'
MSG01    DC    C'FIND0101E No library type or member given'
MSG01L   EQU   *-MSG01
MSG02    DC    C'FIND0102E Library type too long (8 characters max)'
MSG02L   EQU   *-MSG02
MSG03    DC    C'FIND0103E No member name given'
MSG03L   EQU   *-MSG03
MSG05    DC    C'FIND0105E Member name too long'
MSG05L   EQU   *-MSG05
MSG06    DC    C'FIND0106E Invalid library type'
MSG06L   EQU   *-MSG06
MSG07    DC    C'FIND0107E Could not determine any data sets to search'
MSG07L   EQU   *-MSG07
MSG08    DC    C'FIND0108I Member not found'
MSG08L   EQU   *-MSG08
*---------------------------------------------------------------------*
DDNTXTP  DC    AL2(DALDDNAM),AL2(1),AL2(8)
DSNTXTP  DC    AL2(DALDSNAM),AL2(1),AL2(44)
MEMTXTP  DC    AL2(DALMEMBR),AL2(1),AL2(8)
IDSPTXTP DC    AL2(DALSTATS),AL2(1),AL2(1)
NDSPTXTP DC    AL2(DALNDISP),AL2(1),AL2(1)
BLANKS   DC    CL8' '
         SPACE 1
UPPRTAB  DS    0C
         DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         LTORG
*---------------------------------------------------------------------*
*        GETMAINED WORKAREA                                           *
*---------------------------------------------------------------------*
SPFWORK  DSECT
SPFSAVE  DS    18F                 REGISTER SAVE AREA
*---------------------------------------------------------------------*
WORKEP   DS    F                   ENTRY POINT ADDRESS OF FIND03
WORKDSNC DS    F                   DATA SET NAME CHAIN ANCHOR
*---------------------------------------------------------------------*
WORKDCB  DS    (PDSDCBL)X
WORKOPEN DS    (OPENL)X
WORKCLS  DS    (CLOSEL)X
*---------------------------------------------------------------------*
SPFPRM1  DS    A
SPFPRM2  DS    A
SPFPRM3  DS    A
SPFCMD   DS    CL8
*---------------------------------------------------------------------*
*        DYNAMIC ALLOCATION PARAMETERS                                *
*---------------------------------------------------------------------*
DAIRRBA  DS    A                   SVC 99 REQUEST BLOCK ADDRESS
DAIRRB   DS    (S99RBEND-S99RB)X   SVC 99 REQUEST BLOCK
DAIRTXT1 DS    A                   SVC 99 TEXT UNIT 1 ADDRESS
DAIRTXT2 DS    A                   SVC 99 TEXT UNIT 2 ADDRESS
DAIRTXT3 DS    A                   SVC 99 TEXT UNIT 3 ADDRESS
DAIRTXT4 DS    A                   SVC 99 TEXT UNIT 4 ADDRESS
DAIRTXT5 DS    A                   SVC 99 TEXT UNIT 5 ADDRESS
DAIRDDNP DS    AL2,AL2,AL2         DDNAME TEXT UNIT INFO
DAIRDDN  DS    CL8                 DDNAME
DAIRDSNP DS    AL2,AL2,AL2         DATASET NAME TEXT UNIT INFO
DAIRDSN  DS    CL44                DATASET NAME
DAIRMEMP DS    AL2,AL2,AL2         MEMBER NAME TEXT UNIT INFO
DAIRMEM  DS    CL8                 MEMBER NAME
DAIRIDSP DS    AL2,AL2,AL2         INITIAL DISP TEXT UNIT INFO
DAIRIDP  DS    X                   INITIAL DISP
DAIRNDSP DS    AL2,AL2,AL2         NORMAL DISP TEXT UNIT INFO
DAIRNDP  DS    X                   NORMAL DISP
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
WORKTYPE DS    CL8                 TYPE OF LIBRARY TO SEARCH
         DS    CL2                 .. OVERFLOW
WORKMEM  DS    CL8                 MEMBER TO SEARCH FOR
         DS    CL2                 .. OVERFLOW
WORKDSM  DS    CL80
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         FINDREQ DSECT=NO
         DS    20CL44
FIND#    EQU   (*-FINDDSNM)/(L'FINDDSNM)
SPFWORKL EQU   *-SPFWORK
*---------------------------------------------------------------------*
TYPETBLE DSECT
TYPELEN  DS    AL2                 LENGTH OF THIS ENTRY
TYPE#DDS DS    AL2                 NUMBER OF DD NAMES
TYPEDSNS DS    AL2                 NUMBER OF DATASET NAMES
TYPETYPE DS    CL8                 TYPE
TYPEDDS  DS    0CL8                FIRST DD
*---------------------------------------------------------------------*
DSNCDSCT DSECT
DSNCNEXT DS    A                   NEXT BLOCK ON THE CHAIN
DSNCDSN  DS    CL44                DATASET NAME
DSNCL    EQU   *-DSNCDSCT
*---------------------------------------------------------------------*
         EJECT
         IKJCPPL
         IEFZB4D0
         IEFZB4D2
         COPY  REGEQU
         END   FIND
